"use strict";var ApplicationConfiguration=function(){var a="lease-lemur",b=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ngCsv","ui.router","ui.bootstrap","ui.utils"],c=function(b){angular.module(b,[]),angular.module(a).requires.push(b)};return{applicationModuleName:a,applicationModuleVendorDependencies:b,registerModule:c}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function(a){a.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("landlords"),ApplicationConfiguration.registerModule("leases"),ApplicationConfiguration.registerModule("tenants"),ApplicationConfiguration.registerModule("users"),ApplicationConfiguration.registerModule("profiles"),ApplicationConfiguration.registerModule("properties"),angular.module("core").config(["$stateProvider","$urlRouterProvider",function(a,b){b.otherwise("/"),a.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function(a,b,c){a.authentication=b,a.isCollapsed=!1,a.menu=c.getMenu("topbar"),a.toggleCollapsibleMenu=function(){a.isCollapsed=!a.isCollapsed}}]),angular.module("core").controller("HomeController",["$scope","Authentication",function(a,b){a.authentication=b,a.go=function(a){$location.path(a)}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["user"],this.menus={};var a=function(a){if(!a)return this.isPublic;for(var b in a.roles)for(var c in this.roles)if(this.roles[c]===a.roles[b])return!0;return!1};this.validateMenuExistance=function(a){if(a&&a.length){if(this.menus[a])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(a){return this.validateMenuExistance(a),this.menus[a]},this.addMenu=function(b,c,d){return this.menus[b]={isPublic:c||!1,roles:d||this.defaultRoles,items:[],shouldRender:a},this.menus[b]},this.removeMenu=function(a){this.validateMenuExistance(a),delete this.menus[a]},this.addMenuItem=function(b,c,d,e,f,g){return this.validateMenuExistance(b),this.menus[b].items.push({title:c,link:d,uiRoute:e||"/"+d,isPublic:f||this.menus[b].isPublic,roles:g||this.defaultRoles,shouldRender:a}),this.menus[b]},this.removeMenuItem=function(a,b){this.validateMenuExistance(a);for(var c in this.menus[a].items)this.menus[a].items[c].link===b&&this.menus[a].items.splice(c,1);return this.menus[a]},this.addMenu("topbar")}]),angular.module("landlords").run(["Menus",function(a){a.addMenuItem("topbar","Landlords","landlords")}]),angular.module("landlords").config(["$stateProvider",function(a){a.state("listLandlords",{url:"/landlords",templateUrl:"modules/landlords/views/list-landlords.client.view.html"}).state("createLandlord",{url:"/landlords/create",templateUrl:"modules/landlords/views/create-landlord.client.view.html"}).state("viewLandlord",{url:"/landlords/:landlordId",templateUrl:"modules/landlords/views/view-landlord.client.view.html"}).state("editLandlord",{url:"/landlords/:landlordId/edit",templateUrl:"modules/landlords/views/edit-landlord.client.view.html"})}]),angular.module("landlords").controller("LandlordsController",["$scope","$stateParams","$location","Authentication","Landlords",function(a,b,c,d,e){a.authentication=d,a.create=function(){var b=new e({name:this.name});b.$save(function(a){c.path("landlords/"+a._id)},function(b){a.error=b.data.message}),this.name=""},a.remove=function(b){if(b){b.$remove();for(var d in a.landlords)a.landlords[d]===b&&a.landlords.splice(d,1)}else a.landlord.$remove(function(){c.path("landlords")})},a.update=function(){var b=a.landlord;b.$update(function(){c.path("landlords/"+b._id)},function(b){a.error=b.data.message})},a.find=function(){a.landlords=e.query()},a.findOne=function(){a.landlord=e.get({landlordId:b.landlordId})}}]),angular.module("landlords").factory("Landlords",["$resource",function(a){return a("landlords/:landlordId",{landlordId:"@_id"},{update:{method:"PUT"}})}]),angular.module("leases").run(["Menus",function(a){a.addMenuItem("topbar","Leases","leases"),a.addMenuItem("topbar","New Lease","leases/create")}]),angular.module("leases").config(["$stateProvider",function(a){a.state("listLeases",{url:"/leases",templateUrl:"modules/leases/views/list-leases.client.view.html"}).state("createLease",{url:"/leases/create",templateUrl:"modules/leases/views/create-lease.client.view.html"}).state("viewLease",{url:"/leases/:leaseId",templateUrl:"modules/leases/views/view-lease.client.view.html"}).state("editLease",{url:"/leases/:leaseId/edit",templateUrl:"modules/leases/views/edit-lease.client.view.html"})}]),angular.module("leases").controller("LeasesController",["$scope","$filter","$stateParams","$location","Authentication","Leases",function(a,b,c,d,e,f){function g(){var a={startDate:"",endDate:"",monthlyRate:""};return a}a.authentication=e,a.startDateOpen=!1,a.go=function(a){d.path(a)},a.create=function(){var b=new f({tenant:this.tenant,property:this.property,landlord:this.landlord,startDate:this.startDate,endDate:this.endDate,leasePeriods:this.leasePeriods});this.validate()&&b.$save(function(a){d.path("leases/"+a._id)},function(b){a.error=b.data.message}),a.error||(this.tenant="",this.property="",this.landlord="",this.startDate="",this.leasePeriods=[])},a.remove=function(b){if(b){b.$remove();for(var c in a.leases)a.leases[c]===b&&a.leases.splice(c,1)}else a.lease.$remove(function(){d.path("leases")})},a.update=function(){var b=a.lease;b.startDate=a.startDateString,b.endDate=a.endDateString;for(var c in b.leasePeriods)b.leasePeriods[c].startDate=a.lease.leasePeriods[c].startDateString,b.leasePeriods[c].endDate=a.lease.leasePeriods[c].endDateString;this.validate()&&b.$update(function(){d.path("leases/"+b._id)},function(b){a.error=b.data.message})},a.find=function(){a.leases=f.query()},a.findOne=function(){a.lease=f.get({leaseId:c.leaseId}),a.lease.$promise.then(function(c){a.lease=c,a.startDateString=b("date")(c.startDate,"MM/dd/yyyy"),a.endDateString=b("date")(c.endDate,"MM/dd/yyyy");for(var d in a.lease.leasePeriods)a.lease.leasePeriods[d].startDateString=b("date")(a.lease.leasePeriods[d].startDate,"MM/dd/yyyy"),a.lease.leasePeriods[d].endDateString=b("date")(a.lease.leasePeriods[d].endDate,"MM/dd/yyyy")})},a.startDateOpen=!1,a.endDateOpen=!1,a.dateFormat="dd-MMMM-yyyy",a.toggleDatePicker=function(b,c){var d=c+"Open";a[d]=!a[d]},a.sortDateRanges=function(a){return a.sort(function(a,b){return a.startDate>b.startDate})},a.rangePeriodsNoOverlap=function(b){for(var c=this.sortDateRanges(b),d=(c[0].startDate,c[c.length-1].endDate,0);d<c.length-1;d++)if(c[d].startDate===c[d+1].startDate||c[d].endDate>c[d+1].startDate)return a.error="Lease periods "+c[d].startDate+" - "+c[d].endDate+" and "+c[d+1].startDate+" - "+c[d+1].endDate+" overlap",!1;return!0},a.validateLeaseStartEndDates=function(){function b(){var b={startDate:a.startDate,endDate:a.endDate};0===a.leasePeriods.length?a.leasePeriods.push(b):a.leasePeriods[0]=b}var c=a.startDate,d=a.endDate;return d>c?(a.leasePeriods.length<=1&&b(),!0):void 0},a.validateMainDateRange=function(){var b=this.lease?this.lease.startDate:this.startDate,c=this.lease?this.lease.endDate:this.endDate;return c>b?!0:(a.error="Start Date must precede End Date",!1)},a.validate=function(){return this.validateMainDateRange()&&this.rangePeriodsNoOverlap(this.lease?this.lease.leasePeriods:this.leasePeriods)},a.testing=function(){console.log("trying!")},a.addLeasePeriod=function(){a.leasePeriods.push(new g)};var h={addLeasePeriod:function(a){this.leasePeriods.push(new g(a))}};angular.extend(f.prototype,h)}]),angular.module("leases").factory("Leases",["$resource",function(a){return a("leases/:leaseId",{leaseId:"@_id"},{update:{method:"PUT"}})}]),angular.module("tenants").run(["Menus",function(a){a.addMenuItem("topbar","Tenants","tenants")}]),angular.module("tenants").config(["$stateProvider",function(a){a.state("listTenants",{url:"/tenants",templateUrl:"modules/tenants/views/list-tenants.client.view.html"}).state("createTenant",{url:"/tenants/create",templateUrl:"modules/tenants/views/create-tenant.client.view.html"}).state("viewTenant",{url:"/tenants/:tenantId",templateUrl:"modules/tenants/views/view-tenant.client.view.html"}).state("editTenant",{url:"/tenants/:tenantId/edit",templateUrl:"modules/tenants/views/edit-tenant.client.view.html"})}]),angular.module("tenants").controller("TenantsController",["$scope","$stateParams","$location","Authentication","Tenants",function(a,b,c,d,e){a.authentication=d,a.create=function(){var b=new e({name:this.name});b.$save(function(a){c.path("tenants/"+a._id)},function(b){a.error=b.data.message}),this.name=""},a.remove=function(b){if(b){b.$remove();for(var d in a.tenants)a.tenants[d]===b&&a.tenants.splice(d,1)}else a.tenant.$remove(function(){c.path("tenants")})},a.update=function(){var b=a.tenant;b.$update(function(){c.path("tenants/"+b._id)},function(b){a.error=b.data.message})},a.find=function(){a.tenants=e.query()},a.findOne=function(){a.tenant=e.get({tenantId:b.tenantId})}}]),angular.module("tenants").factory("Tenants",["$resource",function(a){return a("tenants/:tenantId",{tenantId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function(a){a.interceptors.push(["$q","$location","Authentication",function(a,b,c){return{responseError:function(d){switch(d.status){case 401:c.user=null,b.path("signin");break;case 403:}return a.reject(d)}}}])}]),angular.module("users").config(["$stateProvider",function(a){a.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/signin.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function(a,b,c,d){a.authentication=d,a.authentication.user&&c.path("/"),a.signup=function(){b.post("/auth/signup",a.credentials).success(function(b){a.authentication.user=b,c.path("/")}).error(function(b){a.error=b.message})},a.signin=function(){b.post("/auth/signin",a.credentials).success(function(b){a.authentication.user=b,c.path("/")}).error(function(b){a.error=b.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function(a,b,c,d,e){a.user=e.user,a.user||c.path("/"),a.hasConnectedAdditionalSocialAccounts=function(b){for(var c in a.user.additionalProvidersData)return!0;return!1},a.isConnectedSocialAccount=function(b){return a.user.provider===b||a.user.additionalProvidersData&&a.user.additionalProvidersData[b]},a.removeUserSocialAccount=function(c){a.success=a.error=null,b["delete"]("/users/accounts",{params:{provider:c}}).success(function(b){a.success=!0,a.user=e.user=b}).error(function(b){a.error=b.message})},a.updateUserProfile=function(){a.success=a.error=null;var b=new d(a.user);b.$update(function(b){a.success=!0,e.user=b},function(b){a.error=b.data.message})},a.changeUserPassword=function(){a.success=a.error=null,b.post("/users/password",a.passwordDetails).success(function(b){a.success=!0,a.passwordDetails=null}).error(function(b){a.error=b.message})}}]),angular.module("users").factory("Authentication",[function(){var a=this;return a._data={user:window.user},a._data}]),angular.module("users").factory("Users",["$resource",function(a){return a("users",{},{update:{method:"PUT"}})}]),angular.module("profiles").config(["$stateProvider",function(a){a.state("listProfiles",{url:"/profiles",templateUrl:"modules/profiles/views/list-profiles.client.view.html"}).state("createProfile",{url:"/profiles/create",templateUrl:"modules/profiles/views/create-profile.client.view.html"}).state("viewProfile",{url:"/profiles/:profileId",templateUrl:"modules/profiles/views/view-profile.client.view.html"}).state("editProfile",{url:"/profiles/:profileId/edit",templateUrl:"modules/profiles/views/edit-profile.client.view.html"})}]),angular.module("profiles").controller("ProfilesController",["$scope","$stateParams","$location","Authentication","Profiles",function(a,b,c,d,e){a.authentication=d,a.create=function(){var b=new e({name:this.name});b.$save(function(a){c.path("profiles/"+a._id)},function(b){a.error=b.data.message}),this.name=""},a.remove=function(b){if(b){b.$remove();for(var d in a.profiles)a.profiles[d]===b&&a.profiles.splice(d,1)}else a.profile.$remove(function(){c.path("profiles")})},a.update=function(){var b=a.profile;b.$update(function(){c.path("profiles/"+b._id)},function(b){a.error=b.data.message})},a.find=function(){a.profiles=e.query()},a.findOne=function(){a.profile=e.get({profileId:b.profileId})}}]),angular.module("profiles").factory("Profiles",["$resource",function(a){return a("profiles/:profileId",{profileId:"@_id"},{update:{method:"PUT"}})}]),angular.module("properties").run(["Menus",function(a){a.addMenuItem("topbar","Properties","properties")}]),angular.module("properties").config(["$stateProvider",function(a){a.state("listProperties",{url:"/properties",templateUrl:"modules/properties/views/list-properties.client.view.html"}).state("createProperty",{url:"/properties/create",templateUrl:"modules/properties/views/create-property.client.view.html"}).state("viewProperty",{url:"/properties/:propertyId",templateUrl:"modules/properties/views/view-property.client.view.html"}).state("editProperty",{url:"/properties/:propertyId/edit",templateUrl:"modules/properties/views/edit-property.client.view.html"})}]),angular.module("properties").controller("PropertiesController",["$scope","$stateParams","$location","Authentication","Properties",function(a,b,c,d,e){a.authentication=d,a.create=function(){var b=new e({name:this.name});b.$save(function(a){c.path("properties/"+a._id)},function(b){a.error=b.data.message}),this.name=""},a.remove=function(b){if(b){b.$remove();for(var d in a.properties)a.properties[d]===b&&a.properties.splice(d,1)}else a.property.$remove(function(){c.path("properties")})},a.update=function(){var b=a.property;b.$update(function(){c.path("properties/"+b._id)},function(b){a.error=b.data.message})},a.find=function(){a.properties=e.query()},a.findOne=function(){a.property=e.get({propertyId:b.propertyId})}}]),angular.module("properties").factory("Properties",["$resource",function(a){return a("properties/:propertyId",{propertyId:"@_id"},{update:{method:"PUT"}})}]);
//# sourceMappingURL=application.min.js.map